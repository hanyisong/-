<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
<!--
    MyBatis 是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。
    MyBatis 免除了几乎所有的 JDBC 代码以及设置参数和获取结果集的工作。
    MyBatis 可以通过简单的 XML 或注解来配置和映射原始类型、接口和 Java POJO（Plain Old Java Objects，普通老式 Java 对象）为数据库中的记录。
    通过mybatis框架来实现我的Dao层接口
-->

<!--
    properties 标签中的配置可以提供整个配置文件使用，在任何位置都可以引入其中配置的值
    properties 标签可以通过子标签 property 标签来配置一些子元素信息，也可以配置外部的动态文件
-->
    <properties resource="db.properties"/><!--也可以配置url，但url和resource只能存在一个-->

    <!-- 单标签：</>  双标签：<></> -->

    <!--类型别名-->
    <!--<typeAliases>
        <typeAlias alias="User" type="com.login_register.entity.User"/>
        </typeAlias>
    -->

    <!--
        environments：环境们，mybatis可以配置多种环境 ,default指定使用某种环境。可以达到快速切换环境。
            environment：配置一个具体的环境信息；必须有两个标签；id代表当前环境的唯一标识
                transactionManager：事务管理器；
                    type：事务管理器的类型;JDBC(JdbcTransactionFactory)|MANAGED(ManagedTransactionFactory)
                        自定义事务管理器：实现TransactionFactory接口.type指定为全类名
                dataSource：数据源;
                    type:数据源类型;UNPOOLED(UnpooledDataSourceFactory)
                                |POOLED(PooledDataSourceFactory)
                                |JNDI(JndiDataSourceFactory)
                    自定义数据源：实现DataSourceFactory接口，type是全类名
    -->

<!--对事物的管理和连接池的配置-->
        <environments default="development">
            <environment id="development">
                <transactionManager type="JDBC" />
                <dataSource type="POOLED">
                    <property name="driver" value="${driver}"/>
                    <property name="url" value="${url}"/>
                    <property name="username" value="${username}"/>
                    <property name="password" value="${password}"/>
                </dataSource>
            </environment>
        </environments>

    <!-- mappers映射器
    只有配置了 mappers 信息后，MyBatis 才知道去哪里加载 Mapper 映射文件，
    在日常开发中，可以根据项目中 Mapper 的配置偏好，选择整合配置文件的配置方式。-->
    <mappers>
        <!-- 映射文件方式1. 一个一个的配置-->
        <!--<mapper resource="com/company/mapper/UserMapper.xml"/>-->
        <!--<mapper class="com.login_register.mapper.UserMapper"/>-->

        <!-- 映射文件方式2.自动扫描包内的Mapper接口与配置文件-->
        <package name="com.login_register.mapper"/>
        <package name="com.Admin.mapper"/>
        <package name="com.User.mapper"/>
    </mappers>

</configuration>
